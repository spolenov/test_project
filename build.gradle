/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.3.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    id 'application'

    //!Добавляем пдагин в конфиги модулей,
    //иначе выражения slf4j/lombok не скомпилируются
    id 'io.freefair.lombok' version '3.8.0'

    id 'org.springframework.boot' version "2.1.6.RELEASE"

}

allprojects {
    apply plugin: 'java'
    group 'test_project'
    version '1.0'

    project.ext.set("profile", 'dev')
}

subprojects {
    task copyProfileProperties(type: Copy){
        def extension = '.properties'

        def filename = 'profile_' + project.profile + extension
        def dirSrc = 'src/main/resources/'
        def dirDest = 'src/main/resources/profile'

        if(!project.profile){
            throw new GradleException(
                    'Failed to set profile settings for ' + project.name + ' ' +
                            'project.profile is ' + project.profile)
        }

        if (file(dirSrc + filename).exists()){
            from file(dirSrc + filename)
            into file(dirDest)

            rename { f ->
                f.replace filename, 'profile' + extension
            }
            println 'Project: [' + project.name + ']:\n' +
                    'Using profile_' + filename + ' file for ' +
                    'profile settings.'
        }
    }

    clean.finalizedBy copyProfileProperties
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file com.century.test_project_spolenov.repository here.
    jcenter()
}

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    implementation 'com.google.guava:guava:27.0.1-jre'
    implementation project(':test_project_web')
}

// Define the main class for the application
mainClassName = 'test_project.App'

Closure projectName = {t -> t.project.name}
Closure cl = { task -> print "I'm " + projectName((Task)task) + "."}
Closure cl2 = { task -> print " Nice to meet you." }
Closure echoPath = { path -> print " This task's path is ${path}\n."}

//Инициализация -> конфигурация -> выполнение
//Блок конфигурации
task hello2
task hello3

hello2{
    println 'config block #1: hello2'
}
hello2{
    println 'config block #2: hello2'
}

hello3{
    println 'config block: hello3'
}


//Зависимости
task hello(dependsOn: [hello2, hello3])

//Блоки операций
hello.doFirst(cl).doLast(cl2).doLast(echoPath)

project(':test_project_db') {
    task('hello').doFirst(cl).doLast(cl2).doLast(echoPath)
}
project(':test_project_service') {
    task('hello').doFirst(cl).doLast(cl2).doLast(echoPath)
}
project(':test_project_web') {
    task('hello').doFirst(cl).doLast(cl2).doLast(echoPath)
}

apply from: 'gradle/profiles/profiles.gradle'


