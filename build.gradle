/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.3.1/userguide/tutorial_java_projects.html
 */

plugins {
    id 'java'
    
    id 'application'

    id 'io.freefair.lombok' version '3.8.0'
}

sourceCompatibility = 1.8

allprojects {
    apply plugin: 'java'
    group 'test_project'
    version '1.0'
}

subprojects{
    project.ext.set('profile', '<NOT SET>')
    apply plugin: 'io.freefair.lombok'
    
    dependencies{
        compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.9.9'
        compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.9'
        compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.9'
    }
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file com.century.test_project_spolenov.repository here.
    jcenter()
}

dependencies {
    implementation 'com.google.guava:guava:27.0.1-jre'
    implementation project(':test_project_web')
}

// Define the main class for the application
mainClassName = 'test_project.App'

Closure projectName = {t -> t.project.name}
Closure cl = { task -> print "I'm " + projectName((Task)task) + "."}
Closure cl2 = { task -> print " Nice to meet you." }
Closure echoPath = { path -> print " This task's path is ${path}\n."}

//Инициализация -> конфигурация -> выполнение
//Блок конфигурации
task hello2
task hello3

hello2{
    println 'config block #1: hello2'
}
hello2{
    println 'config block #2: hello2'
}

hello3{
    println 'config block: hello3'
}


//Зависимости
task hello(dependsOn: [hello2, hello3])

//Блоки операций
hello.doFirst(cl).doLast(cl2).doLast(echoPath)

project(':test_project_db') {
    task('hello').doFirst(cl).doLast(cl2).doLast(echoPath)
}
project(':test_project_service') {
    task('hello').doFirst(cl).doLast(cl2).doLast(echoPath)
}
project(':test_project_web') {
    task('hello').doFirst(cl).doLast(cl2).doLast(echoPath)
}

apply from: 'gradle/properties.gradle'
apply from: 'gradle/profiles.gradle'


