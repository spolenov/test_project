plugins {
    id 'java'
    id 'io.freefair.lombok'
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    "https://plugins.gradle.org/m2/"
}

dependencies {
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.5.0'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.5.0'
    testCompile group: 'org.awaitility', name: 'awaitility', version: '3.1.6'
    testCompile group: 'org.slf4j', name: 'slf4j-api', version: '1.8.0-beta4'
    testCompile group: 'ch.qos.logback', name: 'logback-classic', version: '1.3.0-alpha4'

    compileOnly 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'
}

compileJava {
    options.encoding = 'UTF-8'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

Closure projectName = {t -> t.project.name}

task hello
hello.doFirst({ task -> print "I'm " + projectName((Task)task) + "."})
        .doLast({ task -> print " Nice to meet you." })
        .doLast({ path -> print " This task's path is ${path}\n"})

//Проверяем условный оператор: запускаем команду
//gradle hello executedHelloOnTutorialProject
hello.onlyIf({t -> projectName((Task)t) == 'test_project_tutorial'})
hello.enabled = true

task executedHelloOnTutorialProject(description: 'Сообщим, выполнилась ли задача hello') {
    dependsOn 'hello'
}

Closure reportExecutedHelloOnTutorialProject = {
    String result = tasks.findByName('hello').didWork ? 'Successfully': 'NOT'
    result += ' ' +
            'executed hello on test_project_tutorial.'
    println result
}

executedHelloOnTutorialProject
        .doFirst(reportExecutedHelloOnTutorialProject)
